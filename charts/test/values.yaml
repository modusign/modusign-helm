application-template:
  ## global
  global:
    # -- Common labels for the all resources
    additionalLabels: {}
    # -- optional field that specifies the minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing
    minReadySeconds: 60
    # -- Number of old deployment ReplicaSets to retain. The rest will be garbage collected.
    revisionHistoryLimit: 3
    # Default image used by all components
    image:
      # -- hub applied to all deployments
      hub: harbor.gov.modusign.co.kr/modusign-gov
      # -- repository applied to all deployments
      repository: document
      # -- global image tag
      tag: d368a748bf99388233b607c99bc611c3c18893da
      # -- imagePullPolicy applied to all deployments
      imagePullPolicy: IfNotPresent
    # -- Secrets with credentials to pull images from a private registry
    imagePullSecrets:
      - name: gov-harbor-docker-registry
    # -- Annotations for the all deployed Deployments
    deploymentAnnotations: {}
    # -- Annotations for the all deployed pods
    podAnnotations:
      sidecar.istio.io/proxyCPU: 10m
      sidecar.istio.io/proxyCPULimit: 2000m
      sidecar.istio.io/proxyMemory: 128Mi
      sidecar.istio.io/proxyMemoryLimit: 1024Mi
    # -- Labels for the all deployed pods
    podLabels: {}
    # -- Default node selector for all components
    nodeSelector: {}
    # -- Default tolerations for all components
    tolerations:
      - key: "modusign.co.kr/arm64"
        operator: Exists
        effect: "NoSchedule"
    # Default affinity preset for all components
    affinity: {}
    # # -- Default pod anti-affinity rules. Either: `none`, `soft` or `hard`
    # podAntiAffinity: soft
    # # Node affinity rules
    # nodeAffinity:
    #   # -- Default node affinity rules. Either: `none`, `soft` or `hard`
    #   type: hard
    #   # -- Default match expressions for node affinity
    #   matchExpressions: []
    #     # - key: topology.kubernetes.io/zone
    #     #   operator: In
    #     #   values:
    #     #    - antarctica-east1
    #     #    - antarctica-west1

    # -- Default [TopologySpreadConstraints] rules for all components
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## If labelSelector is left out, it will default to the labelSelector of the component
    topologySpreadConstraints: []
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: DoNotSchedule

    # -- Deployment strategy to be added to the all Deployment
    deploymentStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

    # -- Rollout analysis to be added to the all Rollout
    rolloutAnalysis: {}
    # successfulRunHistoryLimit: 1
    # unsuccessfulRunHistoryLimit: 3

    serviceAccount:
      # -- Create global service account
      # create: true
      # -- Server service account name
      # name: document
      # -- Annotations applied to created service account
      annotations: {}
      # -- Labels applied to created service account
      labels: {}
      # -- Automount API credentials for the Service Account
      automountServiceAccountToken: false
      # -- Image pull Secrets for the Service Account
      imagePullSecrets: []
    # -- Environment variables to pass to all deployed Deployments
    env:
      NODE_ENV: "stage"
      NODE_OPTIONS: "--max_old_space_size=1536"
      UV_THREADPOOL_SIZE: "8"
      HTTP_PORT: "3000"
      MYSQL_MASTER_HOST: "db-1v9uk-kr1.vpc-cdb.gov-ntruss.com"
      MYSQL_MASTER_PORT: "3306"
      MYSQL_SLAVE_HOST: "db-1v9uk-kr1.vpc-cdb.gov-ntruss.com"
      MYSQL_SLAVE_PORT: "3306"
      MYSQL_USER: "document"
      MYSQL_DATABASE: "DocumentService"
      ORM_SYNC: "true"
      AWS_REGION: "gov-standard"
      AWS_S3_ENDPOINT: "https://kr.object.gov-ncloudstorage.com"
      AWS_S3_BUCKET: "stage-document.object.modusign.co.kr"
      AWS_S3_FILE_PROXY_BUCKET: "stage-file-proxy.object.modusign.co.kr"
      AWS_S3_EMAIL_LOGO_BUCKET: "stage-email-custom.object.modusign.co.kr"
      KAFKA_SSL: "false"
      KAFKA_BROKERS: "10.11.8.7:9092,10.11.8.9:9092,10.11.8.10:9092"
      KAFKA_SASL_ENABLED: "false"
      KAFKA_MECHANISM: ""
      KAFKA_USERNAME: ""
      KAFKA_CONTEXT_PATH: ""
      KAFKA_CLIENT_ID: "DocumentService"
      KAFKA_INTEGRATION_EVENT_TOPIC: "v1.IntegrationEvent"
      KAFKA_INTEGRATION_EVENT_RETRY_TOPIC: "v1.IntegrationEventRetry"
      KAFKA_PDF_EDITOR_ASYNC_COMMAND_TOPIC: "v1.PdfEditorTaskService.AsyncCommand"
      STEP_FUNCTIONS_SIGNING_ARN: "arn:aws:states:ap-northeast-2:387526857220:stateMachine:document-service-signing-ETWmon9t5jz4Ayje"
      STEP_FUNCTIONS_CHANGE_SIGNING_PERIOD_ARN: "arn:aws:states:ap-northeast-2:387526857220:stateMachine:document-service-change-signing-period-587QvnYgbBDsu3tB"
      STEP_FUNCTIONS_CREATE_DOCUMENT_ARN: "arn:aws:states:ap-northeast-2:387526857220:stateMachine:document-service-start-document-VHcFO7KjUhfoapyl"
      DOCUMENT_OPENSEARCH_PROTOCOL: "https"
      DOCUMENT_OPENSEARCH_HOST: "vpc-modusign-cluster-stage-vlesd664dkia2elv5l5a2e6ism.ap-northeast-2.es.amazonaws.com"
      DOCUMENT_OPENSEARCH_USERNAME: "admin"
      DOCUMENT_OPENSEARCH_CONTEXT_PATH: ""
      DOCUMENT_OPENSEARCH_INDEX: "modusign-documents"
      APPLICATION_SAGAS_S3_BUCKET: "stage-application-sagas.object.modusign.co.kr"
      REDIS_HOST: "redisc-1v7m5-kr.vpc-cdb.gov-ntruss.com"
      REDIS_PORT: "6379"
      REDIS_TLS: "false"
      REDIS_USERNAME: "modusign"
      # Bullmq
      BULLMQ_TASK_QUEUE: "v1.DocumentService.AsyncTask"
      BULLMQ_TASK_DLQ: "v1.DocumentService.AsyncTaskDlq"
      # MongoDb
      MONGO_WRITER_URL: mongodb://1v9u1.gov.mg.naverncp.com
      MONGO_READER_URL: mongodb://1v9u1.gov.mg.naverncp.com
      MONGO_USER: document
      MONGO_DB_NAME: DocumentService
      # Direktiv
      DIREKTIV_HOST: https://stage-direktiv.gov.modusign.co.kr/api
      DIREKTIV_NAMESPACE: gov-stage
    # -- Secrets variables to pass to all deployed Deployments by argocd vault plugin
    vault:
      enabled: true
      path: "argo-system:document-stage"
      secrets:
        LINK_TOKEN_SECRET: <LINK_TOKEN_SECRET>
        JWT_SECRET: <JWT_SECRET>
        SERVICE_API_KEY: <SERVICE_API_KEY>
        FILE_PROXY_SERVICE_API_KEY: <SERVICE_API_KEY>
        USER_SERVICE_API_KEY: <SERVICE_API_KEY>
        DOWNLOAD_SERVICE_API_KEY: <SERVICE_API_KEY>
        TEMPLATE_SERVICE_API_KEY: <SERVICE_API_KEY>
        CATEGORY_SERVICE_API_KEY: <SERVICE_API_KEY>
        SIGNATURE_SERVICE_API_KEY: <SERVICE_API_KEY>
        SUBSCRIPTION_SERVICE_API_KEY: <SERVICE_API_KEY>
        REDIS_PASSWORD: <REDIS_PASSWORD>
        MYSQL_PASSWORD: <MYSQL_PASSWORD>
        KAFKA_PASSWORD: <KAFKA_PASSWORD>
        DOCUMENT_OPENSEARCH_PASSWORD: <DOCUMENT_OPENSEARCH_PASSWORD>
        MONGO_PASSWORD: <MONGO_PASSWORD>
        DIREKTIV_TOKEN: <DIREKTIV_TOKEN>
        AWS_ACCESS_KEY_ID: <AWS_ACCESS_KEY_ID>
        AWS_SECRET_ACCESS_KEY: <AWS_SECRET_ACCESS_KEY>
        NODE_HTTPS_PROXY: <NODE_HTTPS_PROXY>
        EXTERNAL_PRIVATE_API_KEY: <EXTERNAL_PRIVATE_API_KEY>
        INTERNAL_PRIVATE_API_KEY: <INTERNAL_PRIVATE_API_KEY>
    observability:
      # -- inject datadog admission controller env label
      datadog:
        admissionController:
          enabled: false
          # -- inject grafana
          # grafana:
          #   enabled: false
  ## Server
  server:
    enabled: true
    # -- server name
    # name: document
    # -- set deployment kind to Rollouts
    # rollout:
    #   enabled : false
    workload: rollout
    # Default image used by server components
    image:
      # -- hub applied to server deployments
      hub: ""
      # -- repository applied to server deployments
      repository: ""
      # -- global image tag
      tag: d368a748bf99388233b607c99bc611c3c18893da
      # -- imagePullPolicy applied to server deployments
      imagePullPolicy: ""
    # -- The number of server pods to run
    replicas: 1
    ## server Horizontal Pod Autoscaler
    autoscaling:
      # -- Enable Horizontal Pod Autoscaler ([HPA]) for the server
      enabled: true
      # -- Minimum number of replicas for the server [HPA]
      minReplicas: 1
      # -- Maximum number of replicas for the server [HPA]
      maxReplicas: 5
      # -- Average CPU utilization percentage for the server [HPA]
      # -- If targetCPUUtilizationPercentage is set to 0, the autoscaler will not take CPU metrics into consideration while calculating the number of replicas.
      targetCPUUtilizationPercentage: 800
      # -- Average memory utilization percentage for the server [HPA]
      # -- If targetMemoryUtilizationPercentage is set to 0, the autoscaler will not take memory metrics into consideration while calculating the number of replicas.
      targetMemoryUtilizationPercentage: 0
      # -- Configures the scaling behavior of the target in both Up and Down directions.
      behavior: {}
      # scaleDown:
      #  stabilizationWindowSeconds: 300
      #  policies:
      #   - type: Pods
      #     value: 1
      #     periodSeconds: 180
      # scaleUp:
      #   stabilizationWindowSeconds: 300
      #   policies:
      #   - type: Pods
      #     value: 2
      #     periodSeconds: 60
      scaleTargetRef:
        apiVersion: argoproj.io/v1alpha1
        kind: Rollout
        name: document
    ## server Pod Disruption Budget
    pdb:
      # -- Deploy a [PodDisruptionBudget] for the server
      enabled: false
      # -- Labels to be added to server pdb
      labels: {}
      # -- Annotations to be added to server pdb
      annotations: {}
      # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)
      # @default -- `""` (defaults to 0 if not specified)
      minAvailable: 1
      # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).
      ## Has higher precedence over `server.pdb.minAvailable`
      maxUnavailable: ""
    # -- Additional command line arguments to pass to server
    extraArgs:
      - server
    # -- Additional command line arguments to pass to server
    extraCommands:
      - ./start.sh
    # -- envfrom in server deployment
    envFrom: []
    # -- Specify postStart and preStop lifecycle hooks for your container
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "35"]
    # -- Annotations to be added to server Deployment
    deploymentAnnotations: {}
    # -- Annotations to be added to server pods
    podAnnotations: {}
    # -- Labels to be added to server pods
    podLabels: {}
    # -- Resource limits and requests for the server
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m
    ports:
      - name: http
        port: 80
        targetPort: 3000
    ## Readiness and liveness probes for default backend
    ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    readinessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    livenessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    # -- terminationGracePeriodSeconds for container lifecycle hook
    terminationGracePeriodSeconds: 150
    # -- [Node selector]
    # @default -- `{}` (defaults to global.nodeSelector)
    nodeSelector: {}
    # -- [Tolerations] for use with node taints
    # @default -- `[]` (defaults to global.tolerations)
    tolerations: []
    # - key: modusign.co.kr/arm64
    #   operator: Exists
    #   effect: NoSchedule

    # -- Init containers to add to the application server pod
    initContainers: []
    #  - name: download-tools
    #    image: alpine:3
    #    command: [sh, -c]
    #    args:
    #      - wget -qO kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip &&
    #        unzip kubelogin.zip && mv bin/linux_amd64/kubelogin /custom-tools/
    #    volumeMounts:
    #      - mountPath: /custom-tools
    #        name: custom-tools

    # -- Additional volumeMounts to the application server main container
    volumeMounts: []
    #  - mountPath: /usr/local/bin/kubelogin
    #    name: custom-tools
    #    subPath: kubelogin

    # -- Additional volumes to the application server pod
    volumes: []
    #  - name: custom-tools
    #    emptyDir: {}

    # -- Assign custom [affinity] rules to the deployment
    # @default -- `{}` (defaults to global.affinity preset)
    affinity: {}
    # -- Assign custom [TopologySpreadConstraints] rules to the server
    # @default -- `[]` (defaults to global.topologySpreadConstraints)
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment
    topologySpreadConstraints: []
    # -- Deployment strategy to be added to the server Deployment
    deploymentStrategy:
      canary:
        trafficRouting:
          istio:
            virtualService:
              name: document
              routes:
                - primary
            destinationRule:
              name: document
              canarySubsetName: canary
              stableSubsetName: stable
        steps:
          - setWeight: 10
          - pause: {duration: 60s}
          - setWeight: 10
          - pause: {duration: 30s}
          - setWeight: 20
          - pause: {duration: 30s}
          - setWeight: 30
          - pause: {duration: 30s}
          - setWeight: 50
          - pause: {duration: 30s}
          - setWeight: 80
          - pause: {duration: 30s}
          - setWeight: 100
          - pause: {duration: 30s}
            # type: RollingUpdate
            # rollingUpdate:
            #   maxSurge: 25%
            #   maxUnavailable: 25%
    # -- Rollout analysis to be added to the server Rollout
    rolloutAnalysis:
      successfulRunHistoryLimit: 1
      unsuccessfulRunHistoryLimit: 3
    serviceAccount:
      # -- Create server service account
      create: true
      # -- Server service account name
      name: document-sa
      # -- Annotations applied to created service account
      annotations: {}
      # -- Labels applied to created service account
      labels: {}
      # -- Automount API credentials for the Service Account
      automountServiceAccountToken: false
      # -- Image pull Secrets for the Service Account
      imagePullSecrets: []
    istio:
      # -- Create istio resources
      enabled: true
      # -- ingress gateway configuration
      ingressGateways:
        - name: document-gateway
          host: stage-document.gov.modusign.co.kr
          selector:
            app: istio-internal-ingressgateway
          servers:
            - port:
                number: 80
                name: document-http
                protocol: HTTP
              hosts:
                - stage-document.gov.modusign.co.kr
              tls:
                httpsRedirect: true
            - port:
                number: 443
                name: document-https
                protocol: HTTPS
              hosts:
                - stage-document.gov.modusign.co.kr
              tls:
                credentialName: cert-document-gov-modusign-co-kr
                mode: SIMPLE
      # -- virtualService configuration
      virtualServices:
        - name: document
          gateways:
            - document-gateway
          hosts:
            - stage-document.gov.modusign.co.kr
          http:
            - name: "primary"
              match:
                - uri:
                    prefix: "/stage/"
                - uri:
                    prefix: "/stage"
                - uri:
                    prefix: "/"
              rewrite:
                uri: "/"
              route:
                - destination:
                    subset: stable
                    host: document.default.svc.cluster.local
                  weight: 100
                - destination:
                    subset: canary
                    host: document.default.svc.cluster.local
                  weight: 0
              retries:
                attempts: 3
                perTryTimeout: 30s
              timeout: 90s
      # -- destinationRule configuration
      destinationRules:
        - name: document
          host: document.default.svc.cluster.local
          trafficPolicy:
            tls:
              mode: ISTIO_MUTUAL
          subsets:
            - name: canary
              labels:
                app: document
                version: 1.2.0
            - name: stable
              labels:
                app: document
                version: 1.2.0
  ## Worker
  worker:
    enabled: true
    # -- worker name
    # name: document-worker
    # -- set deployment kind to Rollouts
    # rollout:
    #   enabled : false
    workload: deployment
    # Default image used by worker components
    image:
      # -- hub applied to worker deployments
      hub: ""
      # -- repository applied to worker deployments
      repository: ""
      # -- global image tag
      tag: d368a748bf99388233b607c99bc611c3c18893da
      # -- imagePullPolicy applied to worker deployments
      imagePullPolicy: ""
    # -- The number of worker pods to run
    replicas: 1
    ## worker Horizontal Pod Autoscaler
    autoscaling:
      # -- Enable Horizontal Pod Autoscaler ([HPA]) for the worker
      enabled: true
      # -- Minimum number of replicas for the worker [HPA]
      minReplicas: 1
      # -- Maximum number of replicas for the worker [HPA]
      maxReplicas: 5
      # -- Average CPU utilization percentage for the worker [HPA]
      # -- If targetCPUUtilizationPercentage is set to 0, the autoscaler will not take CPU metrics into consideration while calculating the number of replicas.
      targetCPUUtilizationPercentage: 800
      # -- Average memory utilization percentage for the worker [HPA]
      # -- If targetMemoryUtilizationPercentage is set to 0, the autoscaler will not take memory metrics into consideration while calculating the number of replicas.
      targetMemoryUtilizationPercentage: 0
      # -- Configures the scaling behavior of the target in both Up and Down directions.
      behavior: {}
      # scaleDown:
      #  stabilizationWindowSeconds: 300
      #  policies:
      #   - type: Pods
      #     value: 1
      #     periodSeconds: 180
      # scaleUp:
      #   stabilizationWindowSeconds: 300
      #   policies:
      #   - type: Pods
      #     value: 2
      #     periodSeconds: 60

      # -- scaleTargetRef for the worker [HPA]
      # -- scaleTargetRef.name is same value with worker.name
      scaleTargetRef:
        apiVersion: apps/v1
        kind: Deployment
        name: document-worker
    ## worker Pod Disruption Budget
    pdb:
      # -- Deploy a [PodDisruptionBudget] for the worker
      enabled: false
      # -- Labels to be added to worker pdb
      labels: {}
      # -- Annotations to be added to worker pdb
      annotations: {}
      # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)
      # @default -- `""` (defaults to 0 if not specified)
      minAvailable: ""
      # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).
      ## Has higher precedence over `worker.pdb.minAvailable`
      maxUnavailable: ""
    # -- Additional command line arguments to pass to server
    extraArgs:
      - worker
    # -- Additional command line arguments to pass to server
    extraCommands:
      - ./start.sh
    # -- envfrom in server deployment
    envFrom: []
    # -- Specify postStart and preStop lifecycle hooks for your container
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "35"]
    # -- Annotations to be added to worker Deployment
    deploymentAnnotations: {}
    # -- Annotations to be added to worker pods
    podAnnotations: {}
    # -- Labels to be added to worker pods
    podLabels: {}
    # -- Resource limits and requests for the worker
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m
    ports:
      - name: http
        port: 80
        targetPort: 3000
    ## Readiness and liveness probes for default backend
    ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    readinessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    livenessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    # -- terminationGracePeriodSeconds for container lifecycle hook
    terminationGracePeriodSeconds: 30
    # -- [Node selector]
    # @default -- `{}` (defaults to global.nodeSelector)
    nodeSelector: {}
    # -- [Tolerations] for use with node taints
    # @default -- `[]` (defaults to global.tolerations)
    tolerations: []
    # -- Init containers to add to the application worker pod
    initContainers: []
    #  - name: download-tools
    #    image: alpine:3
    #    command: [sh, -c]
    #    args:
    #      - wget -qO kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip &&
    #        unzip kubelogin.zip && mv bin/linux_amd64/kubelogin /custom-tools/
    #    volumeMounts:
    #      - mountPath: /custom-tools
    #        name: custom-tools

    # -- Additional volumeMounts to the application worker main container
    volumeMounts: []
    #  - mountPath: /usr/local/bin/kubelogin
    #    name: custom-tools
    #    subPath: kubelogin

    # -- Additional volumes to the application worker pod
    volumes: []
    #  - name: custom-tools
    #    emptyDir: {}

    # -- Assign custom [affinity] rules to the deployment
    # @default -- `{}` (defaults to global.affinity preset)
    affinity: {}
    # -- Assign custom [TopologySpreadConstraints] rules to the worker
    # @default -- `[]` (defaults to global.topologySpreadConstraints)
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment
    topologySpreadConstraints: []
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: DoNotSchedule

    # -- Deployment strategy to be added to the worker Deployment
    deploymentStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

    # -- Rollout analysis to be added to the worker Rollout
    rolloutAnalysis: {}
    # successfulRunHistoryLimit: 1
    # unsuccessfulRunHistoryLimit: 3

    serviceAccount:
      # -- Create global service account
      create: false
      # -- Server service account name
      name: document-sa
      # -- Annotations applied to created service account
      annotations: {}
      # -- Labels applied to created service account
      labels: {}
      # -- Automount API credentials for the Service Account
      automountServiceAccountToken: false
      # -- Image pull Secrets for the Service Account
      imagePullSecrets: []
    istio:
      # -- Create istio resources
      enabled: false
      # -- ingress gateway configuration
      ingressGateways: []
      # -- virtualService configuration
      virtualServices: []
      # -- destinationRule configuration
      destinationRules: []
  ## Scheduler
  scheduler:
    enabled: true
    # -- scheduler name
    # name: document-scheduler
    # -- set deployment kind to Rollouts
    # rollout:
    #   enabled : false
    workload: deployment
    # Default image used by scheduler components
    image:
      # -- hub applied to scheduler deployments
      hub: ""
      # -- repository applied to scheduler deployments
      repository: ""
      # -- global image tag
      tag: d368a748bf99388233b607c99bc611c3c18893da
      # -- imagePullPolicy applied to scheduler deployments
      imagePullPolicy: ""
    # -- The number of scheduler pods to run
    replicas: 1
    ## scheduler Horizontal Pod Autoscaler
    autoscaling:
      # -- Enable Horizontal Pod Autoscaler ([HPA]) for the scheduler
      enabled: false
      # -- Minimum number of replicas for the scheduler [HPA]
      minReplicas: 1
      # -- Maximum number of replicas for the scheduler [HPA]
      maxReplicas: 5
      # -- Average CPU utilization percentage for the scheduler [HPA]
      # -- If targetCPUUtilizationPercentage is set to 0, the autoscaler will not take CPU metrics into consideration while calculating the number of replicas.
      targetCPUUtilizationPercentage: 80
      # -- Average memory utilization percentage for the scheduler [HPA]
      # -- If targetMemoryUtilizationPercentage is set to 0, the autoscaler will not take memory metrics into consideration while calculating the number of replicas.
      targetMemoryUtilizationPercentage: 0
      # -- Configures the scaling behavior of the target in both Up and Down directions.
      behavior: {}
      # scaleDown:
      #  stabilizationWindowSeconds: 300
      #  policies:
      #   - type: Pods
      #     value: 1
      #     periodSeconds: 180
      # scaleUp:
      #   stabilizationWindowSeconds: 300
      #   policies:
      #   - type: Pods
      #     value: 2
      #     periodSeconds: 60
      scaleTargetRef: {}
      # apiVersion: apps/v1
      # kind: Deployment
      # name: document-scheduler
    ## scheduler Pod Disruption Budget
    pdb:
      # -- Deploy a [PodDisruptionBudget] for the scheduler
      enabled: false
      # -- Labels to be added to scheduler pdb
      labels: {}
      # -- Annotations to be added to scheduler pdb
      annotations: {}
      # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)
      # @default -- `""` (defaults to 0 if not specified)
      minAvailable: ""
      # -- Number of pods that are unavailable after eviction as number or percentage (eg.: 50%).
      ## Has higher precedence over `scheduler.pdb.minAvailable`
      maxUnavailable: ""
    # -- Additional command line arguments to pass to server
    extraArgs:
      - scheduler
    # -- Additional command line arguments to pass to server
    extraCommands:
      - ./start.sh
    # -- envfrom in server deployment
    envFrom: []
    # -- Specify postStart and preStop lifecycle hooks for your container
    lifecycle:
      preStop:
        exec:
          command: ["sleep", "35"]
    # -- Annotations to be added to scheduler Deployment
    deploymentAnnotations: {}
    # -- Annotations to be added to scheduler pods
    podAnnotations: {}
    # -- Labels to be added to scheduler pods
    podLabels: {}
    # -- Resource limits and requests for the scheduler
    resources:
      requests:
        memory: 256Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m
    ports:
      - name: http
        port: 80
        targetPort: 3000
    ## Readiness and liveness probes for default backend
    ## Ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/
    readinessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    livenessProbe:
      httpGet:
        path: /health
        port: 3000
      # -- Minimum consecutive failures for the [probe] to be considered failed after having succeeded
      failureThreshold: 3
      # -- Number of seconds after the container has started before [probe] is initiated
      initialDelaySeconds: 10
      # -- How often (in seconds) to perform the [probe]
      periodSeconds: 10
      # -- Minimum consecutive successes for the [probe] to be considered successful after having failed
      successThreshold: 1
      # -- Number of seconds after which the [probe] times out
      timeoutSeconds: 1
    # -- terminationGracePeriodSeconds for container lifecycle hook
    terminationGracePeriodSeconds: 30
    # -- [Node selector]
    # @default -- `{}` (defaults to global.nodeSelector)
    nodeSelector: {}
    # -- [Tolerations] for use with node taints
    # @default -- `[]` (defaults to global.tolerations)
    tolerations: []
    # -- Init containers to add to the application scheduler pod
    initContainers: []
    #  - name: download-tools
    #    image: alpine:3
    #    command: [sh, -c]
    #    args:
    #      - wget -qO kubelogin.zip https://github.com/Azure/kubelogin/releases/download/v0.0.25/kubelogin-linux-amd64.zip &&
    #        unzip kubelogin.zip && mv bin/linux_amd64/kubelogin /custom-tools/
    #    volumeMounts:
    #      - mountPath: /custom-tools
    #        name: custom-tools

    # -- Additional volumeMounts to the application scheduler main container
    volumeMounts: []
    #  - mountPath: /usr/local/bin/kubelogin
    #    name: custom-tools
    #    subPath: kubelogin

    # -- Additional volumes to the application scheduler pod
    volumes: []
    #  - name: custom-tools
    #    emptyDir: {}

    # -- Assign custom [affinity] rules to the deployment
    # @default -- `{}` (defaults to global.affinity preset)
    affinity: {}
    # -- Assign custom [TopologySpreadConstraints] rules to the scheduler
    # @default -- `[]` (defaults to global.topologySpreadConstraints)
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/
    ## If labelSelector is left out, it will default to the labelSelector configuration of the deployment
    topologySpreadConstraints: []
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: DoNotSchedule

    # -- Deployment strategy to be added to the scheduler Deployment
    deploymentStrategy: {}
    # type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

    # -- Rollout analysis to be added to the scheduler Rollout
    rolloutAnalysis: {}
    # successfulRunHistoryLimit: 1
    # unsuccessfulRunHistoryLimit: 3

    serviceAccount:
      # -- Create global service account
      create: false
      # -- Server service account name
      name: document-sa
      # -- Annotations applied to created service account
      annotations: {}
      # -- Labels applied to created service account
      labels: {}
      # -- Automount API credentials for the Service Account
      automountServiceAccountToken: false
      # -- Image pull Secrets for the Service Account
      imagePullSecrets: []
    istio:
      # -- Create istio resources
      enabled: false
      # -- ingress gateway configuration
      ingressGateways: []
      # -- virtualService configuration
      virtualServices: []
      # -- destinationRule configuration
      destinationRules: []
